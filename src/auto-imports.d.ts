/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
// biome-ignore lint: disable
export {}
declare global {
  const BgAudio: typeof import('./utils/platform')['BgAudio']
  const DialStatus: typeof import('./types/enums')['DialStatus']
  const DialType: typeof import('./types/enums')['DialType']
  const EffectScope: typeof import('vue')['EffectScope']
  const KeepDay4Deleted: typeof import('./store/history')['KeepDay4Deleted']
  const PageType: typeof import('./types/enums')['PageType']
  const Painter: typeof import('./utils/canvas')['Painter']
  const RecordConfirmRejectError: typeof import('./types/history')['RecordConfirmRejectError']
  const RecordType: typeof import('./types/enums')['RecordType']
  const TickType: typeof import('./types/enums')['TickType']
  const VibrateType: typeof import('./types/enums')['VibrateType']
  const WebAudio: typeof import('./utils/platform')['WebAudio']
  const acceptHMRUpdate: typeof import('pinia')['acceptHMRUpdate']
  const checkIfExist: typeof import('./utils/excel')['checkIfExist']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const createImageSource: typeof import('./utils/platform')['createImageSource']
  const createPinia: typeof import('pinia')['createPinia']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const defineStore: typeof import('pinia')['defineStore']
  const deleteExcelFile: typeof import('./utils/excel')['deleteExcelFile']
  const effectScope: typeof import('vue')['effectScope']
  const exportExcelFile: typeof import('./utils/excel')['exportExcelFile']
  const formatDuration: typeof import('./utils/format')['formatDuration']
  const formatTime: typeof import('./utils/format')['formatTime']
  const getActivePinia: typeof import('pinia')['getActivePinia']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const getOffscreenCRContext: typeof import('./utils/platform')['getOffscreenCRContext']
  const getRandomHex: typeof import('./utils/color')['getRandomHex']
  const h: typeof import('vue')['h']
  const hex2rgba: typeof import('./utils/color')['hex2rgba']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const mapActions: typeof import('pinia')['mapActions']
  const mapGetters: typeof import('pinia')['mapGetters']
  const mapState: typeof import('pinia')['mapState']
  const mapStores: typeof import('pinia')['mapStores']
  const mapWritableState: typeof import('pinia')['mapWritableState']
  const markRaw: typeof import('vue')['markRaw']
  const monoFonts: typeof import('./utils/platform')['monoFonts']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onAddToFavorites: typeof import('@dcloudio/uni-app')['onAddToFavorites']
  const onBackPress: typeof import('@dcloudio/uni-app')['onBackPress']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onError: typeof import('@dcloudio/uni-app')['onError']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onHide: typeof import('@dcloudio/uni-app')['onHide']
  const onLaunch: typeof import('@dcloudio/uni-app')['onLaunch']
  const onLoad: typeof import('@dcloudio/uni-app')['onLoad']
  const onMounted: typeof import('vue')['onMounted']
  const onNavigationBarButtonTap: typeof import('@dcloudio/uni-app')['onNavigationBarButtonTap']
  const onNavigationBarSearchInputChanged: typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputChanged']
  const onNavigationBarSearchInputClicked: typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputClicked']
  const onNavigationBarSearchInputConfirmed: typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputConfirmed']
  const onNavigationBarSearchInputFocusChanged: typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputFocusChanged']
  const onPageNotFound: typeof import('@dcloudio/uni-app')['onPageNotFound']
  const onPageScroll: typeof import('@dcloudio/uni-app')['onPageScroll']
  const onPullDownRefresh: typeof import('@dcloudio/uni-app')['onPullDownRefresh']
  const onReachBottom: typeof import('@dcloudio/uni-app')['onReachBottom']
  const onReady: typeof import('@dcloudio/uni-app')['onReady']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onResize: typeof import('@dcloudio/uni-app')['onResize']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onShareAppMessage: typeof import('@dcloudio/uni-app')['onShareAppMessage']
  const onShareTimeline: typeof import('@dcloudio/uni-app')['onShareTimeline']
  const onShow: typeof import('@dcloudio/uni-app')['onShow']
  const onTabItemTap: typeof import('@dcloudio/uni-app')['onTabItemTap']
  const onThemeChange: typeof import('@dcloudio/uni-app')['onThemeChange']
  const onUnhandledRejection: typeof import('@dcloudio/uni-app')['onUnhandledRejection']
  const onUnload: typeof import('@dcloudio/uni-app')['onUnload']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const padFixedInt: typeof import('./utils/format')['padFixedInt']
  const parseDuration: typeof import('./utils/format')['parseDuration']
  const provide: typeof import('vue')['provide']
  const queryCanvasEnv: typeof import('./utils/platform')['queryCanvasEnv']
  const random: typeof import('./utils/color')['random']
  const reactive: typeof import('vue')['reactive']
  const readExcelFile: typeof import('./utils/excel')['readExcelFile']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const removeExcelDir: typeof import('./utils/excel')['removeExcelDir']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const rgb2hex: typeof import('./utils/color')['rgb2hex']
  const saveAsUserData: typeof import('./utils/excel')['saveAsUserData']
  const serifFonts: typeof import('./utils/platform')['serifFonts']
  const setActivePinia: typeof import('pinia')['setActivePinia']
  const setMapStoreSuffix: typeof import('pinia')['setMapStoreSuffix']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const storeToRefs: typeof import('pinia')['storeToRefs']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDial: typeof import('./store/stopwatch')['useDial']
  const useEgg: typeof import('./store/utils')['useEgg']
  const useHistory: typeof import('./store/history')['useHistory']
  const useHistoryLaunch: typeof import('./store/history')['useHistoryLaunch']
  const useHistoryStore: typeof import('./store/history')['useHistoryStore']
  const useId: typeof import('vue')['useId']
  const useModel: typeof import('vue')['useModel']
  const useRecords: typeof import('./store/stopwatch')['useRecords']
  const useRouter: typeof import('./store/router')['useRouter']
  const useSetting: typeof import('./store/stopwatch')['useSetting']
  const useSlots: typeof import('vue')['useSlots']
  const useSystem: typeof import('./store/utils')['useSystem']
  const useTags: typeof import('./store/tags')['useTags']
  const useTagsLaunch: typeof import('./store/tags')['useTagsLaunch']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useTimer: typeof import('./store/timer')['useTimer']
  const useTimerStore: typeof import('./store/timer')['useTimerStore']
  const useWorkletOpacity: typeof import('./utils/platform')['useWorkletOpacity']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { pkey } from './store/router'
  import('./store/router')
  // @ts-ignore
  export type { RecordConfirmRejectError, HistoryRecord, HistoryRecordStatus, DeletedRecord, RecordToBeConfirmed } from './types/history'
  import('./types/history')
  // @ts-ignore
  export type { TimeRecord, TimePeak, Duration, Tag } from './types/time'
  import('./types/time')
  // @ts-ignore
  export type { Painter } from './utils/canvas'
  import('./utils/canvas')
  // @ts-ignore
  export type { WebAudio, BgAudio } from './utils/platform'
  import('./utils/platform')
}

// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly BgAudio: UnwrapRef<typeof import('./utils/platform')['BgAudio']>
    readonly DialStatus: UnwrapRef<typeof import('./types/enums')['DialStatus']>
    readonly DialType: UnwrapRef<typeof import('./types/enums')['DialType']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly KeepDay4Deleted: UnwrapRef<typeof import('./store/history')['KeepDay4Deleted']>
    readonly Painter: UnwrapRef<typeof import('./utils/canvas')['Painter']>
    readonly RecordConfirmRejectError: UnwrapRef<typeof import('./types/history')['RecordConfirmRejectError']>
    readonly RecordType: UnwrapRef<typeof import('./types/enums')['RecordType']>
    readonly TickType: UnwrapRef<typeof import('./types/enums')['TickType']>
    readonly VibrateType: UnwrapRef<typeof import('./types/enums')['VibrateType']>
    readonly WebAudio: UnwrapRef<typeof import('./utils/platform')['WebAudio']>
    readonly acceptHMRUpdate: UnwrapRef<typeof import('pinia')['acceptHMRUpdate']>
    readonly checkIfExist: UnwrapRef<typeof import('./utils/excel')['checkIfExist']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly createImageSource: UnwrapRef<typeof import('./utils/platform')['createImageSource']>
    readonly createPinia: UnwrapRef<typeof import('pinia')['createPinia']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly defineStore: UnwrapRef<typeof import('pinia')['defineStore']>
    readonly deleteExcelFile: UnwrapRef<typeof import('./utils/excel')['deleteExcelFile']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly exportExcelFile: UnwrapRef<typeof import('./utils/excel')['exportExcelFile']>
    readonly formatDuration: UnwrapRef<typeof import('./utils/format')['formatDuration']>
    readonly formatTime: UnwrapRef<typeof import('./utils/format')['formatTime']>
    readonly getActivePinia: UnwrapRef<typeof import('pinia')['getActivePinia']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly getOffscreenCRContext: UnwrapRef<typeof import('./utils/platform')['getOffscreenCRContext']>
    readonly getRandomHex: UnwrapRef<typeof import('./utils/color')['getRandomHex']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly hex2rgba: UnwrapRef<typeof import('./utils/color')['hex2rgba']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly mapActions: UnwrapRef<typeof import('pinia')['mapActions']>
    readonly mapGetters: UnwrapRef<typeof import('pinia')['mapGetters']>
    readonly mapState: UnwrapRef<typeof import('pinia')['mapState']>
    readonly mapStores: UnwrapRef<typeof import('pinia')['mapStores']>
    readonly mapWritableState: UnwrapRef<typeof import('pinia')['mapWritableState']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly monoFonts: UnwrapRef<typeof import('./utils/platform')['monoFonts']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onAddToFavorites: UnwrapRef<typeof import('@dcloudio/uni-app')['onAddToFavorites']>
    readonly onBackPress: UnwrapRef<typeof import('@dcloudio/uni-app')['onBackPress']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onError: UnwrapRef<typeof import('@dcloudio/uni-app')['onError']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onHide: UnwrapRef<typeof import('@dcloudio/uni-app')['onHide']>
    readonly onLaunch: UnwrapRef<typeof import('@dcloudio/uni-app')['onLaunch']>
    readonly onLoad: UnwrapRef<typeof import('@dcloudio/uni-app')['onLoad']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onNavigationBarButtonTap: UnwrapRef<typeof import('@dcloudio/uni-app')['onNavigationBarButtonTap']>
    readonly onNavigationBarSearchInputChanged: UnwrapRef<typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputChanged']>
    readonly onNavigationBarSearchInputClicked: UnwrapRef<typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputClicked']>
    readonly onNavigationBarSearchInputConfirmed: UnwrapRef<typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputConfirmed']>
    readonly onNavigationBarSearchInputFocusChanged: UnwrapRef<typeof import('@dcloudio/uni-app')['onNavigationBarSearchInputFocusChanged']>
    readonly onPageNotFound: UnwrapRef<typeof import('@dcloudio/uni-app')['onPageNotFound']>
    readonly onPageScroll: UnwrapRef<typeof import('@dcloudio/uni-app')['onPageScroll']>
    readonly onPullDownRefresh: UnwrapRef<typeof import('@dcloudio/uni-app')['onPullDownRefresh']>
    readonly onReachBottom: UnwrapRef<typeof import('@dcloudio/uni-app')['onReachBottom']>
    readonly onReady: UnwrapRef<typeof import('@dcloudio/uni-app')['onReady']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onResize: UnwrapRef<typeof import('@dcloudio/uni-app')['onResize']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onShareAppMessage: UnwrapRef<typeof import('@dcloudio/uni-app')['onShareAppMessage']>
    readonly onShareTimeline: UnwrapRef<typeof import('@dcloudio/uni-app')['onShareTimeline']>
    readonly onShow: UnwrapRef<typeof import('@dcloudio/uni-app')['onShow']>
    readonly onTabItemTap: UnwrapRef<typeof import('@dcloudio/uni-app')['onTabItemTap']>
    readonly onThemeChange: UnwrapRef<typeof import('@dcloudio/uni-app')['onThemeChange']>
    readonly onUnhandledRejection: UnwrapRef<typeof import('@dcloudio/uni-app')['onUnhandledRejection']>
    readonly onUnload: UnwrapRef<typeof import('@dcloudio/uni-app')['onUnload']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly padFixedInt: UnwrapRef<typeof import('./utils/format')['padFixedInt']>
    readonly parseDuration: UnwrapRef<typeof import('./utils/format')['parseDuration']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly queryCanvasEnv: UnwrapRef<typeof import('./utils/platform')['queryCanvasEnv']>
    readonly random: UnwrapRef<typeof import('./utils/color')['random']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readExcelFile: UnwrapRef<typeof import('./utils/excel')['readExcelFile']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly removeExcelDir: UnwrapRef<typeof import('./utils/excel')['removeExcelDir']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly rgb2hex: UnwrapRef<typeof import('./utils/color')['rgb2hex']>
    readonly saveAsUserData: UnwrapRef<typeof import('./utils/excel')['saveAsUserData']>
    readonly serifFonts: UnwrapRef<typeof import('./utils/platform')['serifFonts']>
    readonly setActivePinia: UnwrapRef<typeof import('pinia')['setActivePinia']>
    readonly setMapStoreSuffix: UnwrapRef<typeof import('pinia')['setMapStoreSuffix']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly storeToRefs: UnwrapRef<typeof import('pinia')['storeToRefs']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useDial: UnwrapRef<typeof import('./store/stopwatch')['useDial']>
    readonly useEgg: UnwrapRef<typeof import('./store/utils')['useEgg']>
    readonly useHistory: UnwrapRef<typeof import('./store/history')['useHistory']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useRecords: UnwrapRef<typeof import('./store/stopwatch')['useRecords']>
    readonly useRouter: UnwrapRef<typeof import('./store/router')['useRouter']>
    readonly useSetting: UnwrapRef<typeof import('./store/stopwatch')['useSetting']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useSystem: UnwrapRef<typeof import('./store/utils')['useSystem']>
    readonly useTags: UnwrapRef<typeof import('./store/tags')['useTags']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useTimer: UnwrapRef<typeof import('./store/timer')['useTimer']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}